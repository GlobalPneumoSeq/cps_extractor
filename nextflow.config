// Default parameters that can be overridden
params {
    // Show help message
    help = false
    // Alternative workflow for getting versions of pipeline and tools
    version = false
    // Blastdb, default cps_blastdb
    blastdb = "$projectDir/cps_blastdb"
    // Default directory for input reads
    input = "$projectDir/input"
    // Default output directory
    output = "$projectDir/output"
    // Prodigal training file for annotation
    prodigal_training_file = "all.trn"
    // Path to bakta database
    bakta_db = "/data/pam/software/bakta/v5"
    // Bakta threads
    bakta_threads = 4
}

// Set process container images
process {
    withLabel: bakta_container {
        container = 'quay.io/biocontainers/bakta:1.8.2--pyhdfd78af_1'
    }
    withLabel: bash_container {
        container = 'wbitt/network-multitool:69aa4d5'
    }
    withLabel: blast_container {
        container = 'staphb/blast:2.14.1'
    }
    withLabel: bwa_container {
        container = 'staphb/bwa:0.7.17'
    }
    withLabel: cps_extractor_python {
        container = 'oliverlorenzsanger/python-cps-extractor:test'
    }
    withLabel: samtools_container {
        container = 'staphb/samtools:1.16'
    }
}

// Set parameters of different run environments
profiles {

    // Default Profile for local machine
    // Docker as container engine, execute by local machine
    standard {
        process{
            executor = 'local'
        }
        docker {
            enabled = true
            runOptions = '-u $(id -u):$(id -g)'
        }
    }

    // Alternative Profile for local machine
    // Singularity as container engine, execute by local machine
    singularity {
        params.singularity_cachedir = "$projectDir/singularity_cache"

        singularity {
            enabled = true
            autoMounts = true
            cacheDir = params.singularity_cachedir
        }
    }

    // Profile for LSF, tested on Sanger farm5
    // Singularity as container engine, execute by LSF
    lsf {
        params.singularity_cachedir = "$projectDir/singularity_cache"
        params.maxretries = 4

        process {
            executor = 'lsf'
            scratch = true
            time = {30.min * task.attempt}
            withLabel: farm_low {
                cpus = 1
                memory = {1.GB * task.attempt}
                errorStrategy = 'retry'
                maxRetries = params.maxretries
            }
            withLabel: farm_mid {
                cpus = 4
                memory = {15.GB * task.attempt}
                errorStrategy = 'retry'
                maxRetries = params.maxretries
            }
            withLabel: farm_high {
                cpus = 32
                memory = {16.GB * task.attempt}
                errorStrategy = 'retry'
                maxRetries = params.maxretries
            }
            withLabel: farm_high_fallible {
                cpus = 32
                memory = {16.GB * task.attempt}
                errorStrategy = { task.attempt <= params.maxretries ? 'retry' : 'ignore' }
                maxRetries = params.maxretries
            }
            withLabel: farm_slow {
                time = {2.hour * task.attempt}
            }
            withLabel: farm_scratchless {
                scratch = false
            }
            withLabel: farm_local {
                executor = 'local'
            }
        }
        executor {
            perJobMemLimit = true
        }
        singularity {
            enabled = true
            autoMounts = true
            cacheDir = params.singularity_cachedir
        }
    }
    sangertower {
        tower {
            enabled = true
            endpoint = 'https://tower.internal.sanger.ac.uk/api/'
        }
    }

}
